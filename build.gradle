buildscript {
    repositories {
        maven { url "http://files.minecraftforge.net/maven" }
        maven { url "http://repo.spongepowered.org/maven" }
        maven { url "https://plugins.gradle.org/m2/" }
        jcenter()
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
        classpath "org.spongepowered:mixingradle:0.6-SNAPSHOT"
        classpath "com.github.jengelman.gradle.plugins:shadow:4.0.2"
    }
}

apply plugin: "net.minecraftforge.gradle.tweaker-client"
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "org.spongepowered.mixin"
apply plugin: "java"

group = "me.dags"
version = "5.3.0-1.13"
targetCompatibility = sourceCompatibility = "1.8"

minecraft {
    runDir = "run"
    version = "1.13"
    mappings = "snapshot_20180908"
    tweakClass = "me.dags.daflight.launch.DaFlightTweaker"
    makeObfSourceJar = false
}

repositories {
    mavenCentral()
    maven { url 'https://www.dimdev.org/maven/' } // borrow mcp mappings from here
    maven { url "https://libraries.minecraft.net/" }
    maven { url "https://repo.spongepowered.org/maven/" }
}

dependencies {
    implementation ("org.spongepowered:mixin:0.7.11-SNAPSHOT") { transitive = false }
    compileOnly ("net.minecraft:launchwrapper:1.12") { transitive = false }
}

mixin {
    defaultObfuscationEnv notch
    add sourceSets.main, "mixin.daflight.refmap.json"
}

reobf {
    shadowJar{}
}

sourceSets {
    main {
        compileClasspath += main.compileClasspath
    }
}

jar {
    afterEvaluate {
        manifest {
            attributes (
                    "Built-By"              : "ForgeGradle",
                    "Implementation-Vendor" : "dags",
                    "Implementation-Title"  : project.name,
                    "Implementation-Version": project.version,
                    "TweakClass"            : "me.dags.daflight.launch.DaFlightLoaderTweaker",
                    "TweakName"             : project.name,
                    "TweakVersion"          : project.version,
                    "TweakAuthor"           : "dags"
            )
        }
    }
}

shadowJar {
    dependsOn jar
    exclude "dummyThing"
    classifier = "standalone"
}

build.dependsOn reobfShadowJar