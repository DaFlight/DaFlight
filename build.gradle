buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://jitpack.io" }
        maven { url "http://repo.spongepowered.org/maven" }
        maven { url 'https://files.minecraftforge.net/maven' }
    }
    dependencies {
        classpath group: "net.minecraftforge.gradle", name: "ForgeGradle", version: "3.+", changing: true
//        classpath group: "org.spongepowered", name: "mixingradle", version: "0.7-SNAPSHOT", changing: true
        classpath group: "com.github.SpongePowered", name: "MixinGradle", version: "master-SNAPSHOT", changing: true
        classpath group: "com.github.jengelman.gradle.plugins", name: "shadow", version: "4.0.2"
    }
}

apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "net.minecraftforge.gradle"
apply plugin: "org.spongepowered.mixin"
apply plugin: "java"

group = "me.dags"
version = "${mod_version}-mc${mc_version}"
archivesBaseName = "daflight"
targetCompatibility = sourceCompatibility = 1.8

configurations {
    shade
    implementation.extendsFrom shade
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

minecraft {
    mappings channel: mcp_channel, version: mcp_version
    runs {
        client {
            workingDirectory project.file("client")
            property "forge.logging.markers", "SCAN,REGISTRIES,REGISTRYDUMP"
            property "forge.logging.console.level", "debug"
            mods { examplemod { source sourceSets.main } }
        }
    }
}

repositories {
    mavenCentral()
    maven { url "https://repo.spongepowered.org/maven/" }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"
    shade("org.spongepowered:mixin:0.8-SNAPSHOT") { transitive = false }
}

mixin {
    add sourceSets.main, "mixin.daflight.refmap.json"
}

reobf {
    jar {}
    shadowJar {}
}

jar {
    classifier = "min"
    afterEvaluate {
        manifest {
            attributes(
                    "Built-By": "ForgeGradle",
                    "Implementation-Vendor": "dags",
                    "Implementation-Title": project.name,
                    "Implementation-Version": project.version,
                    "TweakName": project.name,
                    "TweakVersion": project.version,
                    "TweakAuthor": "dags",
                    "TweakClass": "me.dags.daflight.launch.DaFlightLoaderTweaker"
            )
        }
    }
}

shadowJar {
    dependsOn jar
    classifier = ""
    exclude "dummyThing", "LICENSE.txt"
    mergeServiceFiles()
    configurations = [project.configurations.shade]
}

build.dependsOn reobfShadowJar
