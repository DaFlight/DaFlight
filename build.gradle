buildscript {
    repositories {
        jcenter()
        maven { url "https://www.dimdev.org/maven/" }
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "http://repo.spongepowered.org/maven" }
    }
    dependencies {
        classpath "org.dimdev:ForgeGradle:2.3-SNAPSHOT"
        classpath "org.spongepowered:mixingradle:0.6-SNAPSHOT"
        classpath "com.github.jengelman.gradle.plugins:shadow:4.0.2"
    }
}

apply plugin: "net.minecraftforge.gradle.tweaker-client"
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "org.spongepowered.mixin"
apply plugin: "java"

group = "me.dags"
version = "5.3.0pre1-mc1.13"
archivesBaseName = "daflight"
targetCompatibility = sourceCompatibility = "1.8"

minecraft {
    version = "1.13"
    mappings = "snapshot_5"
    runDir = "run"
    tweakClass = "me.dags.daflight.launch.DaFlightTweaker"
    makeObfSourceJar = false
}

configurations {
    shade
    implementation.extendsFrom shade
}

repositories {
    mavenCentral()
    maven { url "https://www.dimdev.org/maven/" }
    maven { url "https://repo.spongepowered.org/maven/" }
}

dependencies {
    shade("org.spongepowered:mixin:0.7.11-SNAPSHOT") { transitive = false }
    implementation("net.minecraft:launchwrapper:1.12") { transitive = false }
    runtime("org.spongepowered:mixin:0.7.11-SNAPSHOT") { transitive = false }
    runtime("net.minecraft:launchwrapper:1.12") { transitive = false }
}

mixin {
    defaultObfuscationEnv notch
    add sourceSets.main, "mixin.daflight.refmap.json"
}

reobf {
    jar {}
    shadowJar {}
}

jar {
    classifier = "min"
    afterEvaluate {
        manifest {
            attributes(
                    "Built-By": "ForgeGradle",
                    "Implementation-Vendor": "dags",
                    "Implementation-Title": project.name,
                    "Implementation-Version": project.version,
                    "TweakName": project.name,
                    "TweakVersion": project.version,
                    "TweakAuthor": "dags",
                    "TweakClass": "me.dags.daflight.launch.DaFlightLoaderTweaker"
            )
        }
    }
}

shadowJar {
    dependsOn jar
    classifier = ""
    exclude "dummyThing", "LICENSE.txt"
    mergeServiceFiles()
    configurations = [project.configurations.shade]
}

build.dependsOn reobfShadowJar

import net.minecraftforge.gradle.tasks.EtagDownloadTask

task processJson(type: Copy) {
    def things = [
            version      : project.version,
            project      : project.name,
            timestamp    : new Date().format("yyyy'-'MM'-'dd'T'hh':'mm':'ssZZZZ"),
            mcversion    : project.minecraft.version,
            artifact     : "$project.group:$project.name:$version",
            universal_jar: project.shadowJar.archivePath.name,
            tweak_class  : project.minecraft.tweakClass
    ]
    from("install_profile.json") {
        filter { line ->
            def replaces = (line =~ /@(.+?)@/)
            replaces.each {
                line = line.replace(it[0], things[it[1]] ?: "null")
            }
            line
        }
    }
    from(".") {
        include "daflight-logo.png"
        rename { "daflight-installer-logo.png" }
    }
    into "build/distributions/packaging/resources"
    outputs.upToDateWhen { false }
}

task downloadInstaller(type: EtagDownloadTask) {
    url = "http://files.minecraftforge.net/maven/net/minecraftforge/installer/1.5/installer-1.5-shrunk.jar"
    dieWithError = true
    file = "build/distributions/packaging/installer-fresh.jar"
}

task installer(type: Zip) {
    from shadowJar
    from processJson
    from(zipTree(downloadInstaller.file)) {
        exclude "*.json"
        exclude "*.png"
    }
    baseName = project.name
    classifier = "installer"
    extension = "jar"
    destinationDir = file("build/distributions")
    duplicatesStrategy = "EXCLUDE"
    outputs.upToDateWhen { false }
    dependsOn downloadInstaller, build, processJson
}